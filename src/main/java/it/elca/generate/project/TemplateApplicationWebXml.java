package it.elca.generate.project;

import it.elca.generate.ConfigCreateProject;
import it.elca.generate.DataBase;
import it.elca.generate.Utils;
import it.elca.generate.template.AbstractTemplate;

public class TemplateApplicationWebXml extends AbstractTemplate {

	public TemplateApplicationWebXml(DataBase database) {
		super(database);
	}

	public String getTypeFile() {
		return "java";
	}

	/**
	 * This template has been generated by https://www.buildmystring.com
	 */
	public String getBody(){
		ConfigCreateProject conf = ConfigCreateProject.getIstance();
		String body = 
		"package "+ conf.getPackageclass() +";\r\n\n" +
		"import " +  conf.getPackageclass() +".config.DefaultProfileUtil;\r\n" +
		"import org.springframework.boot.builder.SpringApplicationBuilder;\r\n" +
		"import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\r\n\n" +
		"/**\r\n" +
		" * This is a helper Java class that provides an alternative to creating a web.xml.\r\n" +
		" * This will be invoked only when the application is deployed to a Servlet container like Tomcat, JBoss etc.\r\n" +
		" */\r\n" +
		"public class ApplicationWebXml extends SpringBootServletInitializer {\r\n\n" +
		"    @Override\r\n" +
		"    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\r\n" +
		"        /**\r\n" +
		"         * set a default to use when no profile is configured.\r\n" +
		"         */\r\n" +
		"        DefaultProfileUtil.addDefaultProfile(application.application());\r\n" +
		"        return application.sources(" + Utils.getClassNameCamelCase(conf.getProjectName()) + conf.getApp() + ".class);\r\n" +
		"    }\r\n\n" +
		"}\r\n";
		return body;
	}

	public String getClassName(){
		return "ApplicationWebXml";
	}

	public String getTypeTemplate() {
		return "";
	}

	public String getSourceFolder() {
		return "src/main/java";
	}
}
